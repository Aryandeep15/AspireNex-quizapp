{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\OneDrive\\\\Desktop\\\\quiz-maker\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\n// Quiz.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getQuizById } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [quiz, setQuiz] = useState(null);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const {\n          data\n        } = await getQuizById(id);\n        setQuiz(data);\n        setUserAnswers(new Array(data.questions.length).fill(''));\n      } catch (error) {\n        console.error('Error fetching quiz:', error);\n      }\n    };\n    fetchQuiz();\n  }, [id]);\n  const handleAnswerChange = (index, event) => {\n    const newAnswers = [...userAnswers];\n    newAnswers[index] = event.target.value;\n    setUserAnswers(newAnswers);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Calculate score based on correct answers\n    const score = calculateScore();\n    console.log('Score:', score);\n    setSubmitted(true);\n  };\n  const calculateScore = () => {\n    let correctCount = 0;\n    quiz.questions.forEach((question, index) => {\n      if (question.correctAnswer === userAnswers[index]) {\n        correctCount++;\n      }\n    });\n    return correctCount / quiz.questions.length * 100;\n  };\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", quiz.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `option-${index}-${optIndex}`,\n              name: `question-${index}`,\n              value: option,\n              checked: userAnswers[index] === option,\n              onChange: e => handleAnswerChange(index, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `option-${index}-${optIndex}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, optIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), !submitted && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", calculateScore(), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"4lwBlrXIgoTzH0U0Hg3ax6duR34=\", false, function () {\n  return [useParams];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getQuizById","jsxDEV","_jsxDEV","Quiz","_s","id","quiz","setQuiz","userAnswers","setUserAnswers","submitted","setSubmitted","fetchQuiz","data","Array","questions","length","fill","error","console","handleAnswerChange","index","event","newAnswers","target","value","handleSubmit","e","preventDefault","score","calculateScore","log","correctCount","forEach","question","correctAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","title","author","onSubmit","map","questionText","options","option","optIndex","type","name","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/aryan/OneDrive/Desktop/quiz-maker/frontend/src/components/Quiz.js"],"sourcesContent":["// Quiz.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getQuizById } from '../api';\r\n\r\nconst Quiz = () => {\r\n  const { id } = useParams();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        const { data } = await getQuizById(id);\r\n        setQuiz(data);\r\n        setUserAnswers(new Array(data.questions.length).fill(''));\r\n      } catch (error) {\r\n        console.error('Error fetching quiz:', error);\r\n      }\r\n    };\r\n    fetchQuiz();\r\n  }, [id]);\r\n\r\n  const handleAnswerChange = (index, event) => {\r\n    const newAnswers = [...userAnswers];\r\n    newAnswers[index] = event.target.value;\r\n    setUserAnswers(newAnswers);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Calculate score based on correct answers\r\n    const score = calculateScore();\r\n    console.log('Score:', score);\r\n    setSubmitted(true);\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    let correctCount = 0;\r\n    quiz.questions.forEach((question, index) => {\r\n      if (question.correctAnswer === userAnswers[index]) {\r\n        correctCount++;\r\n      }\r\n    });\r\n    return (correctCount / quiz.questions.length) * 100;\r\n  };\r\n\r\n  if (!quiz) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{quiz.title}</h1>\r\n      <p>Author: {quiz.author}</p>\r\n      <form onSubmit={handleSubmit}>\r\n        {quiz.questions.map((question, index) => (\r\n          <div key={index}>\r\n            <h3>{question.questionText}</h3>\r\n            <ul>\r\n              {question.options.map((option, optIndex) => (\r\n                <li key={optIndex}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id={`option-${index}-${optIndex}`}\r\n                    name={`question-${index}`}\r\n                    value={option}\r\n                    checked={userAnswers[index] === option}\r\n                    onChange={(e) => handleAnswerChange(index, e)}\r\n                  />\r\n                  <label htmlFor={`option-${index}-${optIndex}`}>{option}</label>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n        {!submitted && <button type=\"submit\">Submit Quiz</button>}\r\n      </form>\r\n      {submitted && (\r\n        <div>\r\n          <h2>Quiz Completed!</h2>\r\n          <p>Your score: {calculateScore()}%</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}