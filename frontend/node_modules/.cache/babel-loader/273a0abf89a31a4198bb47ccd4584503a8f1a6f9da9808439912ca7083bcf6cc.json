{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\OneDrive\\\\Desktop\\\\quiz-maker\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getQuizById } from '../api';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [quiz, setQuiz] = useState(null);\n  const [score, setScore] = useState(null);\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const {\n          data\n        } = await getQuizById(id);\n        setQuiz(data);\n      } catch (error) {\n        console.error('Error fetching quiz:', error);\n      }\n    };\n    fetchQuiz();\n  }, [id]);\n  const handleQuizSubmit = () => {\n    const totalQuestions = quiz.questions.length;\n    const correctAnswers = quiz.questions.filter(question => {\n      return question.selectedOption === question.correctAnswer;\n    }).length;\n    const percentageScore = correctAnswers / totalQuestions * 100;\n    Swal.fire({\n      title: 'Quiz Completed!',\n      html: `You scored ${percentageScore}%`,\n      icon: 'success',\n      showCancelButton: true,\n      confirmButtonText: 'Home',\n      cancelButtonText: 'Retake Quiz'\n    }).then(result => {\n      if (result.isConfirmed) {\n        window.location.href = '/';\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        resetQuiz();\n      }\n    });\n    setScore(percentageScore);\n  };\n  const resetQuiz = () => {\n    const resetQuestions = quiz.questions.map(question => ({\n      ...question,\n      selectedOption: null\n    }));\n    setQuiz({\n      ...quiz,\n      questions: resetQuestions\n    });\n    setScore(null);\n  };\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", quiz.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question${index}`,\n              value: option,\n              checked: question.selectedOption === option,\n              onChange: e => {\n                const newQuestions = [...quiz.questions];\n                newQuestions[index].selectedOption = e.target.value;\n                setQuiz({\n                  ...quiz,\n                  questions: newQuestions\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), option]\n          }, optIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleQuizSubmit,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), score !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your Score: \", score, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"5sJQZaeuiA3k1OKW2FUfWzZwPDc=\", false, function () {\n  return [useParams];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getQuizById","Swal","jsxDEV","_jsxDEV","Quiz","_s","id","quiz","setQuiz","score","setScore","fetchQuiz","data","error","console","handleQuizSubmit","totalQuestions","questions","length","correctAnswers","filter","question","selectedOption","correctAnswer","percentageScore","fire","title","html","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","window","location","href","dismiss","DismissReason","cancel","resetQuiz","resetQuestions","map","children","fileName","_jsxFileName","lineNumber","columnNumber","author","index","questionText","options","option","optIndex","type","name","value","checked","onChange","e","newQuestions","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aryan/OneDrive/Desktop/quiz-maker/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getQuizById } from '../api';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Quiz = () => {\r\n  const { id } = useParams();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [score, setScore] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        const { data } = await getQuizById(id);\r\n        setQuiz(data);\r\n      } catch (error) {\r\n        console.error('Error fetching quiz:', error);\r\n      }\r\n    };\r\n    fetchQuiz();\r\n  }, [id]);\r\n\r\n  const handleQuizSubmit = () => {\r\n    const totalQuestions = quiz.questions.length;\r\n    const correctAnswers = quiz.questions.filter(question => {\r\n      return question.selectedOption === question.correctAnswer;\r\n    }).length;\r\n    const percentageScore = (correctAnswers / totalQuestions) * 100;\r\n\r\n    Swal.fire({\r\n      title: 'Quiz Completed!',\r\n      html: `You scored ${percentageScore}%`,\r\n      icon: 'success',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Home',\r\n      cancelButtonText: 'Retake Quiz'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        window.location.href = '/';\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        resetQuiz();\r\n      }\r\n    });\r\n\r\n    setScore(percentageScore);\r\n  };\r\n\r\n  const resetQuiz = () => {\r\n    const resetQuestions = quiz.questions.map(question => ({\r\n      ...question,\r\n      selectedOption: null,\r\n    }));\r\n    setQuiz({ ...quiz, questions: resetQuestions });\r\n    setScore(null);\r\n  };\r\n\r\n  if (!quiz) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{quiz.title}</h1>\r\n      <p>Author: {quiz.author}</p>\r\n      <div>\r\n        {quiz.questions.map((question, index) => (\r\n          <div key={index}>\r\n            <h3>{question.questionText}</h3>\r\n            <ul>\r\n              {question.options.map((option, optIndex) => (\r\n                <li key={optIndex}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={`question${index}`}\r\n                    value={option}\r\n                    checked={question.selectedOption === option}\r\n                    onChange={(e) => {\r\n                      const newQuestions = [...quiz.questions];\r\n                      newQuestions[index].selectedOption = e.target.value;\r\n                      setQuiz({ ...quiz, questions: newQuestions });\r\n                    }}\r\n                  />\r\n                  {option}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleQuizSubmit}>Submit Quiz</button>\r\n      {score !== null && <p>Your Score: {score}%</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}