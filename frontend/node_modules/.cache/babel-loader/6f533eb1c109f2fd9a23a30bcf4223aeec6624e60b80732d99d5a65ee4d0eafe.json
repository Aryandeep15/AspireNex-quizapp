{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\OneDrive\\\\Desktop\\\\quiz-maker\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\QuizMasterDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createQuiz } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizMasterDashboard = () => {\n  _s();\n  const [quizData, setQuizData] = useState({\n    title: '',\n    genre: '',\n    questions: [{\n      questionText: '',\n      options: ['', '', '', ''],\n      correctAnswer: ''\n    }]\n  });\n  const handleChange = (index, event) => {\n    const newQuestions = quizData.questions.map((question, i) => {\n      if (index === i) {\n        return {\n          ...question,\n          [event.target.name]: event.target.value\n        };\n      }\n      return question;\n    });\n    setQuizData({\n      ...quizData,\n      questions: newQuestions\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await createQuiz(quizData);\n      // Clear form after successful submission\n      setQuizData({\n        title: '',\n        genre: '',\n        questions: [{\n          questionText: '',\n          options: ['', '', '', ''],\n          correctAnswer: ''\n        }]\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Master Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quiz Title\",\n        value: quizData.title,\n        onChange: e => setQuizData({\n          ...quizData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Genre\",\n        value: quizData.genre,\n        onChange: e => setQuizData({\n          ...quizData,\n          genre: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), quizData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"questionText\",\n          placeholder: \"Question\",\n          value: question.questionText,\n          onChange: e => handleChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `option${optIndex}`,\n          placeholder: `Option ${optIndex + 1}`,\n          value: option,\n          onChange: e => {\n            const newOptions = question.options.map((opt, i) => i === optIndex ? e.target.value : opt);\n            const newQuestions = quizData.questions.map((q, i) => i === index ? {\n              ...q,\n              options: newOptions\n            } : q);\n            setQuizData({\n              ...quizData,\n              questions: newQuestions\n            });\n          }\n        }, optIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"correctAnswer\",\n          placeholder: \"Correct Answer\",\n          value: question.correctAnswer,\n          onChange: e => handleChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizMasterDashboard, \"f5JxaZ/pTaYQKXOYfXRW8IlAJOw=\");\n_c = QuizMasterDashboard;\nexport default QuizMasterDashboard;\nvar _c;\n$RefreshReg$(_c, \"QuizMasterDashboard\");","map":{"version":3,"names":["React","useState","createQuiz","jsxDEV","_jsxDEV","QuizMasterDashboard","_s","quizData","setQuizData","title","genre","questions","questionText","options","correctAnswer","handleChange","index","event","newQuestions","map","question","i","target","name","value","handleSubmit","e","preventDefault","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","option","optIndex","newOptions","opt","q","_c","$RefreshReg$"],"sources":["C:/Users/aryan/OneDrive/Desktop/quiz-maker/frontend/src/components/Dashboard/QuizMasterDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createQuiz } from '../api';\r\n\r\nconst QuizMasterDashboard = () => {\r\n  const [quizData, setQuizData] = useState({\r\n    title: '',\r\n    genre: '',\r\n    questions: [{ questionText: '', options: ['', '', '', ''], correctAnswer: '' }],\r\n  });\r\n\r\n  const handleChange = (index, event) => {\r\n    const newQuestions = quizData.questions.map((question, i) => {\r\n      if (index === i) {\r\n        return { ...question, [event.target.name]: event.target.value };\r\n      }\r\n      return question;\r\n    });\r\n    setQuizData({ ...quizData, questions: newQuestions });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await createQuiz(quizData);\r\n      // Clear form after successful submission\r\n      setQuizData({\r\n        title: '',\r\n        genre: '',\r\n        questions: [{ questionText: '', options: ['', '', '', ''], correctAnswer: '' }],\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Quiz Master Dashboard</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Quiz Title\"\r\n          value={quizData.title}\r\n          onChange={(e) => setQuizData({ ...quizData, title: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Genre\"\r\n          value={quizData.genre}\r\n          onChange={(e) => setQuizData({ ...quizData, genre: e.target.value })}\r\n        />\r\n        {quizData.questions.map((question, index) => (\r\n          <div key={index}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"questionText\"\r\n              placeholder=\"Question\"\r\n              value={question.questionText}\r\n              onChange={(e) => handleChange(index, e)}\r\n            />\r\n            {question.options.map((option, optIndex) => (\r\n              <input\r\n                key={optIndex}\r\n                type=\"text\"\r\n                name={`option${optIndex}`}\r\n                placeholder={`Option ${optIndex + 1}`}\r\n                value={option}\r\n                onChange={(e) => {\r\n                  const newOptions = question.options.map((opt, i) =>\r\n                    i === optIndex ? e.target.value : opt\r\n                  );\r\n                  const newQuestions = quizData.questions.map((q, i) =>\r\n                    i === index ? { ...q, options: newOptions } : q\r\n                  );\r\n                  setQuizData({ ...quizData, questions: newQuestions });\r\n                }}\r\n              />\r\n            ))}\r\n            <input\r\n              type=\"text\"\r\n              name=\"correctAnswer\"\r\n              placeholder=\"Correct Answer\"\r\n              value={question.correctAnswer}\r\n              onChange={(e) => handleChange(index, e)}\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Create Quiz</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizMasterDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}